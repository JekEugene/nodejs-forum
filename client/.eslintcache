[{"G:\\good life\\fullstack\\forum\\client\\src\\index.js":"1","G:\\good life\\fullstack\\forum\\client\\src\\components\\app\\App.js":"2","G:\\good life\\fullstack\\forum\\client\\src\\components\\header\\Header.js":"3","G:\\good life\\fullstack\\forum\\client\\src\\components\\forum-service-context\\forum-service-context.js":"4","G:\\good life\\fullstack\\forum\\client\\src\\components\\pages\\index.js":"5","G:\\good life\\fullstack\\forum\\client\\src\\components\\pages\\post-page.js":"6","G:\\good life\\fullstack\\forum\\client\\src\\components\\pages\\home-page.js":"7","G:\\good life\\fullstack\\forum\\client\\src\\components\\pages\\user-page.js":"8","G:\\good life\\fullstack\\forum\\client\\src\\components\\app\\app.js":"9","G:\\good life\\fullstack\\forum\\client\\src\\components\\header\\header.js":"10","G:\\good life\\fullstack\\forum\\client\\src\\components\\login\\login.js":"11","G:\\good life\\fullstack\\forum\\client\\src\\components\\register\\register.js":"12","G:\\good life\\fullstack\\forum\\client\\src\\components\\register-modal\\register-modal.js":"13","G:\\good life\\fullstack\\forum\\client\\src\\components\\login-modal\\login-modal.js":"14","G:\\good life\\fullstack\\forum\\client\\src\\components\\alert\\alert.js":"15","G:\\good life\\fullstack\\forum\\client\\src\\components\\logout\\logout.js":"16","G:\\good life\\fullstack\\forum\\client\\src\\components\\pages\\add-post-page.js":"17","G:\\good life\\fullstack\\forum\\client\\src\\components\\post-comment\\post-comment.js":"18","G:\\good life\\fullstack\\forum\\client\\src\\components\\cant-post-comment\\cant-post-comment.js":"19"},{"size":221,"mtime":1607547619013,"results":"20","hashOfConfig":"21"},{"size":1139,"mtime":1607290272603,"results":"22","hashOfConfig":"21"},{"size":1408,"mtime":1607295036700,"results":"23","hashOfConfig":"21"},{"size":211,"mtime":1607284266412,"results":"24","hashOfConfig":"21"},{"size":233,"mtime":1607612235840,"results":"25","hashOfConfig":"21"},{"size":6071,"mtime":1607962463953,"results":"26","hashOfConfig":"21"},{"size":2052,"mtime":1607895258537,"results":"27","hashOfConfig":"21"},{"size":3281,"mtime":1607961872245,"results":"28","hashOfConfig":"21"},{"size":5656,"mtime":1607949125212,"results":"29","hashOfConfig":"21"},{"size":1902,"mtime":1607625487734,"results":"30","hashOfConfig":"21"},{"size":278,"mtime":1607354472300,"results":"31","hashOfConfig":"21"},{"size":290,"mtime":1607895320962,"results":"32","hashOfConfig":"21"},{"size":2790,"mtime":1607382388213,"results":"33","hashOfConfig":"21"},{"size":2250,"mtime":1607423760019,"results":"34","hashOfConfig":"21"},{"size":599,"mtime":1607893160048,"results":"35","hashOfConfig":"21"},{"size":315,"mtime":1607528031750,"results":"36","hashOfConfig":"21"},{"size":2437,"mtime":1607895348911,"results":"37","hashOfConfig":"21"},{"size":563,"mtime":1607862256802,"results":"38","hashOfConfig":"21"},{"size":151,"mtime":1607812164973,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1vwbva9",{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"G:\\good life\\fullstack\\forum\\client\\src\\index.js",[],["91","92"],"G:\\good life\\fullstack\\forum\\client\\src\\components\\app\\App.js",["93","94"],"G:\\good life\\fullstack\\forum\\client\\src\\components\\header\\Header.js",["95","96","97"],"G:\\good life\\fullstack\\forum\\client\\src\\components\\forum-service-context\\forum-service-context.js",[],"G:\\good life\\fullstack\\forum\\client\\src\\components\\pages\\index.js",[],"G:\\good life\\fullstack\\forum\\client\\src\\components\\pages\\post-page.js",["98","99"],"import React, {Component} from 'react';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport PostComment from '../post-comment/post-comment'\r\nimport CantPostComment from '../cant-post-comment/cant-post-comment'\r\nexport default class PostPage extends Component{\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      commentText: \"\",\r\n      name: props.name,\r\n      user_id: props.user_id,\r\n      post: null,\r\n      comments: [],\r\n      delete: false\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({commentText: e.target.value})\r\n  }\r\n\r\n  deletePost = async (post_id) => {\r\n    const res = await fetch('http://localhost:4000/post/deletePost', {\r\n      method: 'POST',\r\n      credentials: 'include',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8'\r\n      },\r\n      body: JSON.stringify({post_id})\r\n    });\r\n    if(res.status === 200){\r\n      this.setState({delete: true})\r\n    }\r\n  }\r\n\r\n  deleteComment = async (comment_id) => {\r\n    const res = await fetch('http://localhost:4000/post/deleteComment', {\r\n      method: 'POST',\r\n      credentials: 'include',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8'\r\n      },\r\n      body: JSON.stringify({comment_id})\r\n    });\r\n    const result = await res.json()\r\n    const resComments = await fetch(`http://localhost:4000${window.location.pathname}/getComments`)\r\n    const resultComments = await resComments.json()\r\n    this.setState({comments: resultComments})\r\n  }\r\n\r\n  submitComment = async (e) => {\r\n    e.preventDefault()\r\n    const post_id = window.location.pathname.slice(window.location.pathname.lastIndexOf('/')+1)\r\n    console.log(post_id)\r\n    const comment = {\r\n      post_id: post_id,\r\n      commentText: this.state.commentText\r\n    }\r\n    this.setState({commentText: ''})\r\n    const res = await fetch('http://localhost:4000/post/addComment', {\r\n        method: 'POST',\r\n        credentials: 'include',\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=utf-8'\r\n        },\r\n        body: JSON.stringify(comment)\r\n    });\r\n    const result = await res.json()\r\n    const resComments = await fetch(`http://localhost:4000${window.location.pathname}/getComments`)\r\n    const resultComments = await resComments.json()\r\n    this.setState({comments: resultComments})\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    const resPost = await fetch(`http://localhost:4000${window.location.pathname}`)\r\n    const resultPost = await resPost.json()\r\n    this.setState({post: resultPost})\r\n    const resComments = await fetch(`http://localhost:4000${window.location.pathname}/getComments`)\r\n    const resultComments = await resComments.json()\r\n    this.setState({comments: resultComments})\r\n  }\r\n\r\n  render(){\r\n    if(this.state.delete === true){\r\n      return <Redirect to=\"/\"/>\r\n    }\r\n    if(this.state.post === null) {\r\n      return(\r\n        <div className=\"jumbotron\">\r\n            <div class=\"spinner-border\" role=\"status\">\r\n              <span class=\"sr-only\">Loading...</span>\r\n            </div>\r\n          </div>\r\n      )\r\n    }\r\n    if(this.state.post === undefined){\r\n        return(\r\n          <div className=\"jumbotron text-center\">\r\n            <h2>Post not found</h2>\r\n          </div>\r\n        )\r\n    }\r\n    const options = {\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric',\r\n      weekday: 'long',\r\n      timezone: 'UTC',\r\n      hour: 'numeric',\r\n      minute: 'numeric',\r\n      second: 'numeric'\r\n    }\r\n    let comments = null\r\n    if(this.state.comments === null){\r\n      comments =  <><div class=\"spinner-border\" role=\"status\">\r\n                      <span class=\"sr-only\">Loading...</span>\r\n                    </div></>\r\n    } else {\r\n      if(this.state.comments === undefined || this.state.comments.length === 0){\r\n        comments =  ''\r\n      } else {\r\n        \r\n        comments = this.state.comments.map((comment)=>{\r\n          return  <><br/><div className=\"bg-light\">\r\n                      <div className=\"row\">\r\n                        <p><Link to={`/user/${comment.user_id}`}><strong>{comment.user_name} </strong></Link>&nbsp;</p>\r\n                        <p className=\"font-weight-light\"> {new Date(comment.date).toLocaleString(\"en-US\", options)}</p>\r\n                        {comment.user_id === this.props.user_id || this.props.role === 2 ? \r\n                          <button className=\"btn\" onClick={()=>this.deleteComment(comment._id)}>\r\n                            <i class=\"fa fa-times\" ></i>\r\n                          </button> : null}\r\n                      </div>\r\n                    <p>{comment.text}</p>\r\n                  </div></>\r\n        })\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"jumbotron\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1\"></div>\r\n          <div className=\"col-sm-12 col-md-10\">\r\n            <p> <Link to={`/user/${this.state.post.user_id}`}>\r\n                  <strong>{this.state.post.user_name}</strong>\r\n                </Link> {new Date(this.state.post.date).toLocaleString(\"en-US\", options)}\r\n                {this.state.post.user_id === this.props.user_id || this.props.role === 2 ? \r\n                          <button className=\"btn\" onClick={()=>this.deletePost(this.state.post._id)}>\r\n                            <i class=\"fa fa-times\" ></i>\r\n                          </button> : null}\r\n            </p>\r\n            <h3>{this.state.post.title} </h3>\r\n            <p>{this.state.post.text}</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row bg-light\">\r\n          <div className=\"col-md-1\"></div>\r\n          <div className=\"col-sm-12 col-md-10\">\r\n            <h3>Comments </h3>\r\n            <hr/>\r\n            { this.props.role >= 1 ? <PostComment commentText={this.state.commentText}\r\n                                                  handleChange={this.handleChange}\r\n                                                  submitComment={this.submitComment}/> : <CantPostComment /> }\r\n            {comments}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};","G:\\good life\\fullstack\\forum\\client\\src\\components\\pages\\home-page.js",["100","101"],"import React, {Component} from 'react';\r\nimport { Redirect, Link } from 'react-router-dom';\r\n\r\nexport default class HomePage extends Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n        posts: [],\r\n    }\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n      const res = await fetch('http://localhost:4000/post/get')\r\n      const result = await res.json()\r\n      const posts = result\r\n      this.setState({\r\n          posts,\r\n      })\r\n  }\r\n\r\n  render(){\r\n    if(this.state.posts === null) {\r\n      return(\r\n        <div className=\"jumbotron\">\r\n            <div class=\"spinner-border\" role=\"status\">\r\n              <span class=\"sr-only\">Loading...</span>\r\n            </div>\r\n          </div>\r\n      )\r\n    }\r\n    if(this.state.posts === undefined || this.state.posts.length == 0){\r\n        return(\r\n          <div className=\"jumbotron\">\r\n            <h2>No posts</h2>\r\n          </div>\r\n        )\r\n    }\r\n    const options = {\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric',\r\n      weekday: 'long',\r\n      timezone: 'UTC',\r\n      hour: 'numeric',\r\n      minute: 'numeric',\r\n      second: 'numeric'\r\n    }\r\n    const posts = this.state.posts.map((post)=>{\r\n      return  <><div className=\"row\">\r\n                  <div className=\"col-md-1\"></div>\r\n                  <div className=\"col-sm-12 col-md-10\">\r\n                    <p><Link to={`/user/${post.user_id}`}>\r\n                      <strong>{post.user_name}</strong>\r\n                      </Link> \r\n                      {new Date(post.date).toLocaleString(\"en-US\", options)}\r\n                    </p>\r\n                    <h3>{post.title} </h3>\r\n                    <p>{post.text+\"...\"}</p>\r\n                    <Link to={`/post/${post._id}`}>\r\n                      <button className=\"btn btn-secondary\">Read more</button>\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n                <hr />\r\n              </>\r\n    })\r\n    return(\r\n      <div className=\"jumbotron\">\r\n        {posts}\r\n      </div>\r\n    )\r\n  }\r\n};","G:\\good life\\fullstack\\forum\\client\\src\\components\\pages\\user-page.js",["102"],"import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class UserPage extends Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      user: null,\r\n      posts: []\r\n    }\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    let res1 = await fetch(`http://localhost:4000${window.location.pathname}`, {\r\n        method: 'GET',\r\n        credentials: 'include',\r\n    });\r\n    const result1 = await res1.json()\r\n    console.log(result1.id + \"user1\"+ result1.name)\r\n    this.setState({ user: result1})\r\n    let res2 = await fetch(`http://localhost:4000${window.location.pathname}/getPosts`, {\r\n      method: 'POST',\r\n      credentials: 'include',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8'\r\n      },\r\n      body: JSON.stringify({user_id: result1.id})\r\n    });\r\n    const result2 = await res2.json()\r\n    this.setState({posts: result2})\r\n  }\r\n\r\n  render(){\r\n    if(this.state.user === null) {\r\n      return(\r\n        <div className=\"jumbotron\">\r\n          <div class=\"spinner-border\" role=\"status\">\r\n            <span class=\"sr-only\">Loading...</span>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n    if(this.state.user === undefined){\r\n        return(\r\n          <div className=\"jumbotron text-center\">\r\n            <h2>User not found</h2>\r\n          </div>\r\n        )\r\n    }\r\n    const options = {\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric',\r\n      weekday: 'long',\r\n      timezone: 'UTC',\r\n      hour: 'numeric',\r\n      minute: 'numeric',\r\n      second: 'numeric'\r\n    }\r\n    let posts = ''\r\n    if(this.state.posts === null) {\r\n      posts = <><div className=\"jumbotron\">\r\n                  <div class=\"spinner-border\" role=\"status\">\r\n                    <span class=\"sr-only\">Loading...</span>\r\n                  </div>\r\n              </div></>\r\n    } else {\r\n      if(this.state.posts === undefined || this.state.posts.length == 0){\r\n        posts = <><div className=\"jumbotron\">\r\n                    <h3>No posts</h3>\r\n                  </div></>\r\n      } else {\r\n        posts = this.state.posts.map((post)=>{\r\n          return  <><div className=\"row\">\r\n                      <div className=\"col-md-1\"></div>\r\n                      <div className=\"col-sm-12 col-md-10\">\r\n                        <p><Link to={`/user/${post.user_id}`}><strong>{post.user_name}</strong></Link> {new Date(post.date).toLocaleString(\"en-US\", options)}</p>\r\n                        <h3>{post.title} </h3>\r\n                        <p>{post.text.slice(0, 500)+\"...\"}</p>\r\n                        <Link to={`/post/${post._id}`}>\r\n                          <button className=\"btn btn-secondary\">Read more</button>\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                    <hr />\r\n                  </>\r\n        })\r\n      }\r\n    }\r\n    \r\n    return (\r\n      <div className=\"jumbotron row\">\r\n        <div className=\"col-md-1\"></div>\r\n        <div className=\"col-sm-12 col-md-10\">\r\n          <h2>{this.state.user.name}</h2>\r\n          <p>Date of registration: {new Date(this.state.user.date).toLocaleString(\"en-US\", options)}</p>\r\n          <p>last posts:</p>\r\n          {posts}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","G:\\good life\\fullstack\\forum\\client\\src\\components\\app\\app.js",["103"],"import React, {Component} from 'react'\r\nimport {BrowserRouter as Router, Switch, Route, Redirect} from 'react-router-dom';\r\n\r\nimport RegisterModal from \"../register-modal/register-modal\"\r\nimport LoginModal from \"../login-modal/login-modal\"\r\nimport Header from '../header/header'\r\nimport Alert from \"../alert/alert\"\r\nimport { ForumServiceProvider } from '../forum-service-context/forum-service-context';\r\n\r\nimport {\r\n  HomePage,\r\n  UserPage,\r\n  PostPage,\r\n  AddPostPage } from '../pages';\r\nexport default class App extends Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n        alert: false,\r\n        alertMsg: '',\r\n        alertType: '',\r\n        id: null,\r\n        name: '',\r\n        email: '',\r\n        role: 0,\r\n        inputName: '',\r\n        inputEmail: '',\r\n        inputPassword: '',\r\n    }\r\n  }\r\n\r\n  alertCreate = (text, type) => {\r\n    console.log(\"alert\")\r\n    this.setState({\r\n        alert: true,\r\n        alertMsg: text,\r\n        alertType: type\r\n      })\r\n    setTimeout(()=>{\r\n      this.setState({\r\n          alert: false,\r\n          alertMsg: \"\",\r\n          alertType: \"\"\r\n        })\r\n    }, 5000)\r\n  }\r\n\r\n  handleChange = (e) => {\r\n      this.setState({[e.target.name]: e.target.value })\r\n  }\r\n\r\n  registerSubmit = async (e) => {\r\n      e.preventDefault()\r\n      let user = {\r\n          name: this.state.nameInput,\r\n          email: this.state.emailInput,\r\n          password: this.state.passwordInput,\r\n      }\r\n      let res = await fetch('http://localhost:4000/register', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json;charset=utf-8'\r\n          },\r\n          body: JSON.stringify(user)\r\n      });\r\n      const result = await res.json()\r\n      this.alertCreate(result.msg, result.type)\r\n  } \r\n\r\n  loginSubmit = async (e) => {\r\n    e.preventDefault()\r\n    let user = {\r\n        email: this.state.emailInput,\r\n        password: this.state.passwordInput,\r\n    }\r\n    let res = await fetch('http://localhost:4000/login', {\r\n        method: 'POST',\r\n        credentials: 'include',\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=utf-8'\r\n        },\r\n        body: JSON.stringify(user)\r\n    });\r\n    const result = await res.json()\r\n    this.alertCreate(result.msg, result.type)\r\n    if(result.type === \"hide\"){\r\n      this.setState({\r\n        id: result.id,\r\n        name: result.name,\r\n        role: result.role\r\n      })\r\n    }\r\n  } \r\n\r\n  logoutSubmit = async (e) => {\r\n    e.preventDefault()\r\n    let res = await fetch('http://localhost:4000/logout', {\r\n        method: 'POST',\r\n        credentials: 'include',\r\n    });\r\n    const result = await res.json()\r\n    this.setState({\r\n      name: result.name,\r\n      role: result.role\r\n    })\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    try {\r\n      const res = await fetch('http://localhost:4000', {\r\n        method: \"GET\",\r\n        credentials: 'include',\r\n      })\r\n      const result = await res.json()\r\n      if(result.role === 0){\r\n        this.setState({\r\n          name: result.name,\r\n          role: result.role\r\n        })\r\n      } else {\r\n        this.setState({\r\n          id: result.id,\r\n          name: result.name,\r\n          role: result.role\r\n        })\r\n      }\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const alert = this.state.alert\r\n    console.log(\"role: \" + this.state.role)\r\n    return (\r\n      \r\n      <ForumServiceProvider value={this.state.forumService} >\r\n         <Router>\r\n           <div className=\"container\">\r\n              {alert === true ? <Alert \r\n                msg={this.state.alertMsg} \r\n                type={this.state.alertType} \r\n                /> : null}\r\n              <LoginModal \r\n                loginSubmit={this.loginSubmit}\r\n                handleChange={this.handleChange}\r\n                inputEmail={this.state.inputEmail}\r\n                inputPassword={this.state.inputPassword}\r\n                />\r\n              <RegisterModal \r\n                registerSubmit={this.registerSubmit}\r\n                handleChange={this.handleChange}\r\n                inputName={this.state.inputName}\r\n                inputEmail={this.state.inputEmail}\r\n                inputPassword={this.state.inputPassword}\r\n                />  \r\n              <Header \r\n                name={this.state.name}\r\n                rating={this.state.rating}\r\n                email={this.state.email}\r\n                role={this.state.role}\r\n                logoutSubmit={this.logoutSubmit}\r\n                id={this.state.id}/>\r\n              <Switch>\r\n                <Route path=\"/\" exact component={HomePage} />\r\n                <Route path=\"/user/:id\" render={\r\n                  ()=><UserPage \r\n                          user_id={this.state.id}\r\n                          role={this.state.role}\r\n                          name={this.state.name}/>\r\n                }/> />\r\n                <Route path=\"/post/add\" exact render={\r\n                  ()=><AddPostPage \r\n                          id={this.state.id}\r\n                          role={this.state.role}\r\n                          alertCreate={(text, type)=>this.alertCreate(text, type)}/>\r\n                }/>\r\n                <Route path=\"/post/:id\" render={\r\n                  ()=><PostPage \r\n                          user_id={this.state.id}\r\n                          role={this.state.role}\r\n                          name={this.state.name}/>\r\n                }/>\r\n\r\n                <Route render={() => <h2>Page not found</h2>} />\r\n              </Switch>\r\n              \r\n           </div>\r\n         </Router>\r\n      </ForumServiceProvider>\r\n    );\r\n  }\r\n}","G:\\good life\\fullstack\\forum\\client\\src\\components\\header\\header.js",["104","105"],"import Login from \"../login/login\"\r\nimport Register from \"../register/register\"\r\nimport Logout from \"../logout/logout\"\r\nimport React, {Component} from 'react'\r\nimport {Link, NavLink} from 'react-router-dom'\r\nimport \"./header.css\"\r\n  \r\nfunction Header(props) {\r\n\r\n    let dropdown = ''\r\n    if(props.role == 0){\r\n        dropdown =  <><Login /><Register /></> \r\n    } else {\r\n    dropdown = <><Link to={`/user/${props.id}`}><button className=\"btn btn-light\">profile</button></Link>\r\n                    <Logout logoutSubmit={props.logoutSubmit}/></> \r\n    }\r\n    return (\r\n        <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul class=\"navbar-nav mr-auto\">\r\n                    <li class=\"nav-item\">\r\n                        <NavLink to=\"/\">\r\n                            <p class=\"nav-link\">Home</p>\r\n                        </NavLink>\r\n                    </li>\r\n                    <li class=\"nav-item\">\r\n                        <NavLink to=\"/post/add\">\r\n                            <p class=\"nav-link\">Add Post</p>\r\n                        </NavLink>\r\n                    </li>\r\n                </ul>\r\n                <div class=\"dropdown\">\r\n                    <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenu2\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        {props.name}  \r\n                    </button>\r\n                    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenu2\">\r\n                    <div class=\"btn-group-vertical\" id=\"btn-group-header\" role=\"group\" aria-label=\"Basic example\">\r\n                        {dropdown}\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Header","G:\\good life\\fullstack\\forum\\client\\src\\components\\login\\login.js",["106"],"import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nfunction Login(props) {\r\n    return(\r\n        <button type=\"button\" class=\"btn btn-primary btn-light\" data-toggle=\"modal\" data-target=\"#login\">\r\n            login\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Login","G:\\good life\\fullstack\\forum\\client\\src\\components\\register\\register.js",["107"],"import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nfunction Register(props) {\r\n    return(\r\n        <button type=\"button\" class=\"btn btn-primary btn-light\" data-toggle=\"modal\" data-target=\"#register\">\r\n            register\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Register","G:\\good life\\fullstack\\forum\\client\\src\\components\\register-modal\\register-modal.js",["108","109"],"import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport {Redirect} from 'react-router-dom'\r\n \r\nfunction RegisterModal(props){\r\n    return(\r\n        <div class=\"modal\" id=\"register\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div class=\"modal-dialog\" role=\"document\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Register</h5>\r\n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                        <form onSubmit={props.registerSubmit}>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"name\">name</label>\r\n                                <input  type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        id=\"name\" \r\n                                        name=\"nameInput\"\r\n                                        onChange={(e)=>props.handleChange(e)}  \r\n                                        required/>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"email\">email</label>\r\n                                <input  type=\"email\" \r\n                                        class=\"form-control\" \r\n                                        id=\"email\" \r\n                                        name=\"emailInput\"\r\n                                        onChange={(e)=>props.handleChange(e)} \r\n                                        required/>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"password\">password</label>\r\n                                <input  type=\"password\" \r\n                                        class=\"form-control\" \r\n                                        id=\"password\" \r\n                                        name=\"passwordInput\"\r\n                                        onChange={(e)=>props.handleChange(e)} \r\n                                        required/>\r\n                            </div>\r\n                            <div class=\"modal-footer\">\r\n                                <button id=\"register-btn\" type=\"submit\" class=\"btn btn-primary\">register</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterModal","G:\\good life\\fullstack\\forum\\client\\src\\components\\login-modal\\login-modal.js",["110","111"],"import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nfunction LoginModal(props){\r\n    return(\r\n        <div class=\"modal\" id=\"login\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div class=\"modal-dialog\" role=\"document\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Login</h5>\r\n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                        <form onSubmit={props.loginSubmit}>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"email\">email</label>\r\n                                <input  type=\"email\" \r\n                                        class=\"form-control\" \r\n                                        id=\"email\" \r\n                                        name=\"emailInput\"\r\n                                        onChange={(e)=>props.handleChange(e)} \r\n                                        required/>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"password\">password</label>\r\n                                <input  type=\"password\" \r\n                                        class=\"form-control\" \r\n                                        id=\"password\" \r\n                                        name=\"passwordInput\"\r\n                                        onChange={(e)=>props.handleChange(e)} \r\n                                        required/>\r\n                            </div>\r\n                            <div class=\"modal-footer\">\r\n                                <button id=\"login-btn\" type=\"submit\" class=\"btn btn-primary\">login</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginModal","G:\\good life\\fullstack\\forum\\client\\src\\components\\alert\\alert.js",["112","113","114"],"import React from 'react';\r\nconst Alert = (props) => {\r\n\r\n  let alertClass = ''\r\n  let msg = ''\r\n  if (props.type == \"success\") {\r\n    alertClass = \"alert alert-success\"\r\n    msg = \"Well done!\"\r\n  }\r\n  if (props.type == \"error\") {\r\n    alertClass = \"alert alert-danger\"\r\n    msg = \"error\"\r\n  }\r\n  if (props.type == \"hide\"){\r\n    return null\r\n  }\r\n\r\n  if(alertClass){\r\n    return(\r\n      <div class=\"fixed-bottom\">\r\n        <div className={alertClass} role=\"alert\">\r\n          <strong>{msg}</strong> {props.msg}.\r\n        </div>\r\n      </div>\r\n    )\r\n  } else return null\r\n};\r\n\r\nexport default Alert;","G:\\good life\\fullstack\\forum\\client\\src\\components\\logout\\logout.js",["115"],"import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nfunction Logout(props) {\r\n    return(\r\n        <form onSubmit={props.logoutSubmit}>\r\n            <button type=\"submit\" class=\"btn btn-primary btn-light\">\r\n                logout\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Logout","G:\\good life\\fullstack\\forum\\client\\src\\components\\pages\\add-post-page.js",[],"G:\\good life\\fullstack\\forum\\client\\src\\components\\post-comment\\post-comment.js",[],["116","117"],"G:\\good life\\fullstack\\forum\\client\\src\\components\\cant-post-comment\\cant-post-comment.js",[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":2,"column":8,"nodeType":"124","messageId":"125","endLine":2,"endColumn":16},{"ruleId":"122","severity":1,"message":"126","line":3,"column":49,"nodeType":"124","messageId":"125","endLine":3,"endColumn":57},{"ruleId":"122","severity":1,"message":"127","line":4,"column":11,"nodeType":"124","messageId":"125","endLine":4,"endColumn":15},{"ruleId":"128","severity":1,"message":"129","line":18,"column":25,"nodeType":"130","endLine":18,"endColumn":54},{"ruleId":"128","severity":1,"message":"129","line":21,"column":25,"nodeType":"130","endLine":21,"endColumn":54},{"ruleId":"122","severity":1,"message":"131","line":46,"column":11,"nodeType":"124","messageId":"125","endLine":46,"endColumn":17},{"ruleId":"122","severity":1,"message":"131","line":69,"column":11,"nodeType":"124","messageId":"125","endLine":69,"endColumn":17},{"ruleId":"122","severity":1,"message":"126","line":2,"column":10,"nodeType":"124","messageId":"125","endLine":2,"endColumn":18},{"ruleId":"132","severity":1,"message":"133","line":32,"column":66,"nodeType":"134","messageId":"135","endLine":32,"endColumn":68},{"ruleId":"132","severity":1,"message":"133","line":69,"column":68,"nodeType":"134","messageId":"135","endLine":69,"endColumn":70},{"ruleId":"122","severity":1,"message":"126","line":2,"column":49,"nodeType":"124","messageId":"125","endLine":2,"endColumn":57},{"ruleId":"122","severity":1,"message":"136","line":4,"column":16,"nodeType":"124","messageId":"125","endLine":4,"endColumn":25},{"ruleId":"132","severity":1,"message":"133","line":11,"column":19,"nodeType":"134","messageId":"135","endLine":11,"endColumn":21},{"ruleId":"122","severity":1,"message":"123","line":2,"column":8,"nodeType":"124","messageId":"125","endLine":2,"endColumn":16},{"ruleId":"122","severity":1,"message":"123","line":2,"column":8,"nodeType":"124","messageId":"125","endLine":2,"endColumn":16},{"ruleId":"122","severity":1,"message":"123","line":2,"column":8,"nodeType":"124","messageId":"125","endLine":2,"endColumn":16},{"ruleId":"122","severity":1,"message":"126","line":3,"column":9,"nodeType":"124","messageId":"125","endLine":3,"endColumn":17},{"ruleId":"122","severity":1,"message":"123","line":2,"column":8,"nodeType":"124","messageId":"125","endLine":2,"endColumn":16},{"ruleId":"122","severity":1,"message":"126","line":3,"column":9,"nodeType":"124","messageId":"125","endLine":3,"endColumn":17},{"ruleId":"132","severity":1,"message":"133","line":6,"column":18,"nodeType":"134","messageId":"135","endLine":6,"endColumn":20},{"ruleId":"132","severity":1,"message":"133","line":10,"column":18,"nodeType":"134","messageId":"135","endLine":10,"endColumn":20},{"ruleId":"132","severity":1,"message":"133","line":14,"column":18,"nodeType":"134","messageId":"135","endLine":14,"endColumn":20},{"ruleId":"122","severity":1,"message":"123","line":2,"column":8,"nodeType":"124","messageId":"125","endLine":2,"endColumn":16},{"ruleId":"118","replacedBy":"137"},{"ruleId":"120","replacedBy":"138"},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'name' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'result' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Component' is defined but never used.",["139"],["140"],"no-global-assign","no-unsafe-negation"]